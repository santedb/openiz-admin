@using OpenIZAdmin.Extensions
@using OpenIZAdmin.Models
@model OpenIZAdmin.Models.PlaceModels.EditPlaceModel
@{
    ViewBag.Title = Locale.EditPlace_Heading;
}

@Html.Partial("_ObsoleteWarningPartial", new ObsoleteWarningViewModel(Model.IsObsolete, Locale.PlaceNotActive))

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.EditPlace_Heading</span>
    </div>
    <div class="panel panel-body">
        @using (Html.BeginForm("Edit", "Place", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            @Html.HiddenFor(m => m.Id)

            <div class="form-group">
                @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.Name,  new { @class = "form-control", title = Locale.ToolTip_PlaceName})
                    @Html.ValidationMessageFor(m => m.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.ClassConcept, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.ClassConcept, Model.ClassConcepts, new { @class = "form-control", @readonly = "readonly"  })
                    @Html.ValidationMessageFor(m => m.ClassConcept, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.Partial("_EditEntityAddressPartial", Model.Address, new ViewDataDictionary { TemplateInfo = new TemplateInfo { HtmlFieldPrefix = "Address" } })

            <div class="form-group">
                @Html.LabelFor(m => m.TargetPopulation, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.TargetPopulation, new { @class = "form-control", title = Locale.ToolTip_TargetPopulationValue })
                    @Html.ValidationMessageFor(m => m.TargetPopulation, "", new { @class = "text-danger" })
                    <span class="help-block">@Locale.ToolTip_TargetPopulationValue </span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.Year, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    <div class="input-group date" id="targetPopulationYearInputGroup">
                        @Html.TextBoxFor(m => m.Year, new { @class = "form-control", title = Locale.ToolTip_TargetPopulationYear })
                        <span class="input-group-addon">
                            <span class="glyphicon glyphicon-calendar"></span>
                        </span>
                    </div>
                    @Html.ValidationMessageFor(m => m.Year, "", new { @class = "text-danger" })
                    <span class="help-block">@Locale.ToolTip_TargetPopulationYear </span>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.TypeConcept, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.DropDownListFor(m => m.TypeConcept, Model.TypeConcepts, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.TypeConcept, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.IsServiceDeliveryLocation, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.CheckBoxFor(m => m.IsServiceDeliveryLocation, new { @class = "col-md-offset-2" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UpdatedBy, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.UpdatedBy, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(m => m.UpdatedTime, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    @Html.TextBoxFor(m => m.UpdatedTime, new { @class = "form-control", @readonly = "readonly" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <a href="@Url.Action("ViewPlace", new { id = Model.Id, versionId = Model.VersionKey })" class="btn btn-danger">@Locale.Cancel</a>
                    @if (Model.IsObsolete)
                    {
                        <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" disabled="disabled" title="@Locale.ToolTip_Submit">@Locale.CannotUpdateNotActive</button>
                    }
                    else
                    {
                        <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" title="@Locale.ToolTip_Submit">@Locale.Submit</button>
                    }
                </div>
            </div>
        }

        <div class="form-group col-md-offset-2 col-md-8">
            <div class="pull-right">
                @if (!Model.IsObsolete)
                {
                    using (Html.BeginForm("Delete", "Place", new { id = Model.Id }, FormMethod.Post, new { @class = "inlineForm form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-danger">
                            @Locale.Deactivate
                            <span class="glyphicon glyphicon-remove"></span>
                        </button>
                    }
                }
                else
                {
                    using (Html.BeginForm("Activate", "Place", new { id = Model.Id, versionId = Model.VersionKey }, FormMethod.Post, new { @class = "inlineForm form-horizontal", role = "form" }))
                    {
                        @Html.AntiForgeryToken()

                        <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-success">
                            @Locale.Activate
                            <span class="glyphicon glyphicon-upload"></span>
                        </button>
                    }
                }
            </div>
        </div>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.Identifiers</span>
        @if (!Model.IsObsolete)
        {
            <div class="pull-right">
                <a href="@Url.Action("Create", "EntityIdentifier", new {id = Model.Id, type = "Place"})">
                    <span class="text-primary h4">@Locale.New</span>
                    <span class="glyphicon glyphicon-plus-sign"></span>
                </a>
            </div>
        }
    </div>
    @Html.Partial("_ManageIdentifiersPartial", Model.Identifiers)
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.Relationships</span>

        @if (!Model.IsObsolete)
        {
            <div class="pull-right">
                <a href="@Url.Action("AssociateChildPlace", "Place", new { id = Model.Id })">
                    <span class="text-primary h4">@Locale.AssociateChildPlace</span>
                    <span class="glyphicon glyphicon-plus-sign"></span>
                </a>
            </div>

            <div class="pull-right">
                <a href="@Url.Action("AssociateParentPlace", "Place", new { id = Model.Id })">
                    <span class="text-primary h4">@Locale.AssociateParentPlace</span>
                    <span class="glyphicon glyphicon-plus-sign"></span>
                </a>
            </div>
        }

    </div>
    @Html.Partial("_ManageRelationshipsPartial", Model.Relationships)
</div>

@if (Model.IsServiceDeliveryLocation)
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <span class="panel-title">@Locale.AreasServed</span>

            @if (!Model.IsObsolete)
            {
                <div class="pull-right">
                    <a href="@Url.Action("AssociateAreaServed", "Place", new { id = Model.Id })">
                        <span class="text-primary h4">@Locale.AssociateAreaServed</span>
                        <span class="glyphicon glyphicon-plus-sign"></span>
                    </a>
                </div>
            }

        </div>
        @Html.Partial("_ManageAreasServedPartial", Model.AreasServed)
    </div>
}
else
{
    <div class="panel panel-default">
        <div class="panel-heading">
            <span class="panel-title">@Locale.DedicatedServiceDeliveryLocations</span>

            @if (!Model.IsObsolete)
            {
                <div class="pull-right">
                    <a href="@Url.Action("AssociateDedicatedServiceDeliveryLocation", "Place", new { id = Model.Id })">
                        <span class="text-primary h4">@Locale.AssociateDedicatedServiceDeliveryLocation</span>
                        <span class="glyphicon glyphicon-plus-sign"></span>
                    </a>
                </div>
            }

        </div>
        @Html.Partial("_ManageDedicatedServiceDeliveryLocationsPartial", Model.DedicatedServiceDeliveryLocations)
    </div>
}

@section Scripts
{    
    @Scripts.Render("~/bundles/bootstrap-datepicker")

    <script type="text/javascript"> 

        $("#targetPopulationYearInputGroup").datepicker({
            autoclose: true,
            format: " yyyy",
            viewMode: "years",
            minViewMode: "years",
            startDate: '1900',
            endDate: new Date(),
            orientation: "auto"
        });

        $(document).ready(function ()
        {            
            $('.dynamic-dropdown').select2({
                tags: true,
                tokenSeparators: [','],
                width: '100%'
            });

            $('#identifiersTable').DataTable({
                "language":
                {
                    "url": "/Content/datatable-locales/" + getCookie("@LocalizationConfig.LanguageCookieName") + ".json"
                },
                order: [],
                columns: [
                    { "orderable": false },
                    null,
                    null,
                    null,
                    { "orderable": false }
                ]
            });

            $('#relationshipsTable').DataTable({
                "language":
                {
                    "url": "/Content/datatable-locales/" + getCookie("@LocalizationConfig.LanguageCookieName") + ".json"
                },
                order: [],
                columns: [
                    { "orderable": false },
                    null,
                    null,
                    null,
                    null,
                    { "orderable": false }
                ]
            });

        });
    </script>

}