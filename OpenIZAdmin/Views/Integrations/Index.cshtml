@model OpenIZAdmin.Models.IntegrationModels.IntegrationControlModel
@{
    ViewBag.Title = Locale.Integrations;
}



<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.Import @Locale.TargetPopulation</span>
    </div>
    <div class="panel panel-body">
        @using (Html.BeginForm("ImportPopulation", "Integrations", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal", role = "form" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(false, "", new { @class = "text-danger" })

            <div class="form-group row">
                <div class="col-md-12">
                    <ol>
                        <li>@Locale.TargetPopulationDownloadTemplateInstruction (@Html.ActionLink(Locale.DownloadTemplate, "GetTemplate"))</li>
                        <li>@Locale.TargetPopulationEditInstruction</li>
                        <li>
                            @Locale.TargetPopulationUploadInstruction
                        </li>
                    </ol>
                </div>
            </div>
            <div class="form-group row">
                @Html.LabelFor(m => m.TargetPopulationFile, new { @class = "col-md-2 control-label" })
                <div class="col-md-8">
                    <input type="file" id="@Html.IdFor(m => m.TargetPopulationFile)" name="@Html.NameFor(m => m.TargetPopulationFile)" title="@Locale.ToolTip_File" />
                    @Html.ValidationMessageFor(m => m.TargetPopulationFile, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-8 col-md-offset-2">
                    @Html.ActionLink(Locale.DownloadTemplate, "GetTemplate")
                </div>
            </div>
            <div class="form-group row">
                <div class="col-md-8 col-md-offset-2">
                    <button type="submit" data-wait-text="@Locale.PleaseWait" class="btn btn-primary" title="@Locale.ToolTip_Upload">@Locale.Submit</button>

                </div>
            </div>
        }
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.RemoteIntegrations</span>
    </div>
    <div class="panel panel-body">
        <table class="table table-striped table-bordered" id="importTable">
            <thead>
                <tr>
                    <th>@Locale.ImportEventType</th>
                    <th>@Locale.ImportStart</th>
                    <th>@Locale.ImportStop</th>
                    <th>@Locale.ImportObjects</th>
                    <th>@Locale.ImportStatus</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.ImportActs != null)
                {
                    foreach (var item in Model.ImportActs)
                    {
                        <tr>
                            <td>
                                @item.TypeName
                                @if (item.Issues != null)
                                {
                                    <span class="glyphicon glyphicon-warning-sign text-warning"></span>
                                }
                            </td>
                            <td>@item.StartTime</td>
                            <td>@item.StopTime</td>
                            <td>@item.Objects.Count() [@String.Join(",", item.Objects.Select(o => o.ParticipationTypeName).Distinct())]</td>
                            <td>
                                @switch (item.Status)
                                {
                                    case "COMPLETE":
                                        <span class="glyphicon glyphicon-check text-success"></span>
                                        break;
                                    case "CANCELLED":
                                        <span class="glyphicon glyphicon-exclamation-sign text-danger"></span>
                                        break;
                                    case "ACTIVE":
                                        <span class="glyphicon glyphicon-play-circle text-primary"></span>
                                        break;
                                }
                                @item.Status
                            </td>
                            <td class="centerContent autoFitContents">
                                <a class="btn btn-primary" href="/Integrations/View/@(item.Id + "/")">
                                    @Locale.View
                                    <span class="glyphicon glyphicon-eye-open"></span>
                                </a>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">Error loading import events</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <span class="panel-title">@Locale.ImportDuplicates</span>
    </div>
    <div class="panel panel-body">
        <table class="table table-striped table-bordered" id="duplicateTable">
            <thead>
                <tr>
                    <th>@Locale.Place</th>
                    <th>@Locale.Address</th>
                    <th>@Locale.TypeConcept</th>
                    <th>@Locale.DuplicateTarget</th>
                    <th>@Locale.Address</th>
                    <th>@Locale.DuplicateTargetType</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Duplicates != null)
                {
                    foreach (var item in Model.Duplicates)
                    {
                <tr>
                    <td>
                        <a href="/Place/ViewPlace/@(item.SourceId)">@item.SourceName</a>
                    </td>
                    <td>@item.SourceHint </td>
                    <td>
                        @item.SourceTypeConcept
                    </td>
                    <td><a href="/Place/ViewPlace/@(item.TargetId)">@item.TargetName</a></td>
                    <td>@item.TargetHint</td>
                    <td>@item.TargetTypeConcept</td>
                    <td class="centerContent autoFitContents">
                        <a class="btn btn-warning" onclick="return confirm('This will deactivate @item.SourceName and copy its data to @item.TargetName.  Do you want to continue?')" href="@Url.Action($"MergePlace", new { duplicateRelationshipId = item.Id })">
                            @Locale.DuplicateMerge
                            <span class="glyphicon glyphicon-check"></span>
                        </a>
                        <a class="btn btn-danger" onclick="return confirm('This will ignore this merge duplicate until the next update is fetch from the HFR. Do you want to continue?')" href="@Url.Action($"MergeIgnore", new { duplicateRelationshipId = item.Id })">
                            @Locale.DuplicateIgnore
                            <span class="glyphicon glyphicon-trash"></span>
                        </a>
                    </td>
                </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">Error loading import events</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>
@section scripts{

    <script type="text/javascript">
    $(document).ready(function () {

        if ($('#importTable').length && !$.fn.DataTable.isDataTable('#importTable')) {

            $('#importTable').DataTable({
                "language":
                {
                    "url": "/Content/datatable-locales/" + getCookie("@LocalizationConfig.LanguageCookieName") + ".json"
                },
                order: [],
                columns: [
                    { "orderable": false },
                    { "orderable": false },
                    { "orderable": false },
                    { "orderable": false },
                    { "orderable": false },
                    { "orderable": false }
                ]
            });
        }

        if ($('#duplicateTable').length && !$.fn.DataTable.isDataTable('#duplicateTable')) {

            $('#duplicateTable').DataTable({
                "language":
                {
                    "url": "/Content/datatable-locales/" + getCookie("@LocalizationConfig.LanguageCookieName") + ".json"
                },
                order: [],
                columns: [
                    { "orderable": true },
                    { "orderable": true },
                    { "orderable": true },
                    { "orderable": true },
                    { "orderable": false }
                ]
            });
        }

    });
    </script>

}